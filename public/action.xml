<krpano>

  <include url="%SWFPATH%/public/marquee.xml" />

  <style name="linestyle"  keep="false" visible="true" enabled="true" handcursor="true" capture="true" blendmode="normal" children="true" alpha="1.0" autoalpha="false" fillcolor="0xAAAAAA" fillalpha="0.5" borderwidth="2.0" bordercolor="0xffffff" borderalpha="1.0" polyline="true" zorder="9" istext="1" />

  <layer name="sidebar"  visible="false" keep="true" type="container" align="center" width="95%" height="95%" bgcolor="0x00FFFF" bgalpha="0" zorder="100">

    <layer name="scrollarea" url="%SWFPATH%/plugins/scrollarea.swf" alturl="%SWFPATH%/plugins/scrollarea.js" align="center" width="1920" height="1080" direction="all">

    </layer>

  </layer>

  <action name="ini">

    set(heading, 0);

    set(t_pos, 86);

    set(page, 1);

  </action>

  <action name="addhospot" >

    addhotspot(newspot);

    set(hotspot[newspot].url,%1);

    set(hotspot[newspot].ath,get('view.hlookat'));

    set(hotspot[newspot].atv,get('view.vlookat'));

    set(hotspot[newspot].ondown,draghotspots(););

    set(hotspot[newspot].alpha,%2);

    set(hotspot[newspot].scale,%3);

    set(hotspot[newspot].zorder,%4);

    set(hotspot[newspot].nametext,'选择要去往下一个场景');

    set(hotspot[newspot].onloaded,%5add_tooltips(););

    set(plugin[tooltip_newspot].onclick,js(selectscene););

  </action>

  <action name="addhospotpic" >

    addhotspot(newspotpic);

    set(hotspot[newspotpic].url,%1);

    set(hotspot[newspotpic].ath,get('view.hlookat'));

    set(hotspot[newspotpic].atv,get('view.vlookat'));

    set(hotspot[newspotpic].ondown,draghotspots(););

    set(hotspot[newspotpic].alpha,%2);

    set(hotspot[newspotpic].scale,%3);

    set(hotspot[newspotpic].zorder,%4);

    set(hotspot[newspotpic].nametext,'选择图片上传');

    set(hotspot[newspotpic].onloaded,%5add_tooltips(););

    set(plugin[tooltip_newspotpic].onclick,js(selectpic););

  </action>

  <action name="addhospotpic2" >

    addhotspot(newspotpic);

    set(hotspot[newspotpic].url,%1);

    set(hotspot[newspotpic].ath,get('view.hlookat'));

    set(hotspot[newspotpic].atv,get('view.vlookat'));

    set(hotspot[newspotpic].ondown,draghotspots(););

    set(hotspot[newspotpic].alpha,%2);

    set(hotspot[newspotpic].scale,%3);

    set(hotspot[newspotpic].zorder,%4);

    set(hotspot[newspotpic].nametext,'选择图片上传');

    set(hotspot[newspotpic].onloaded,%5add_tooltips(););

    set(plugin[tooltip_newspotpic].onclick,js(selectpic2););

  </action>

  <action name="addhospottext" >

    addhotspot(newstext);

    set(hotspot[newstext].url,%1);

    set(hotspot[newstext].ath,get('view.hlookat'));

    set(hotspot[newstext].atv,get('view.vlookat'));

    set(hotspot[newstext].ondown,draghotspots(););

    set(hotspot[newstext].alpha,%2);

    set(hotspot[newstext].scale,%3);

    set(hotspot[newstext].zorder,%4);

    set(hotspot[newstext].nametext,'编辑文字内容');

    set(hotspot[newstext].onloaded,%5add_tooltips(););

    set(plugin[tooltip_newstext].onclick,js(textedit););

  </action>

  <action name="addhospoturl" >

    addhotspot(newsurl);

    set(hotspot[newsurl].url,%1);

    set(hotspot[newsurl].ath,get('view.hlookat'));

    set(hotspot[newsurl].atv,get('view.vlookat'));

    set(hotspot[newsurl].ondown,draghotspots(););

    set(hotspot[newsurl].alpha,%2);

    set(hotspot[newsurl].scale,%3);

    set(hotspot[newsurl].zorder,%4);

    set(hotspot[newsurl].nametext,'编辑链接内容');

    set(hotspot[newsurl].onloaded,%5add_tooltips(););

    set(plugin[tooltip_newsurl].onclick,js(editurl););

  </action>

  <action name="addplugins">

    addplugin(newsplugin);

    set(plugin[newsplugin].url,%FIRSTXML%/%1);

    set(plugin[newsplugin].x,0);

    set(plugin[newsplugin].y,0);

    set(plugin[newsplugin].visible,true);

    set(plugin[newsplugin].onhover,onhover_drag(););

    set(plugin[newsplugin].ondown,ondown_drag(););

    set(plugin[newsplugin].onup,onup_drag(););

    set(plugin[newsplugin].alpha,%2);

    set(plugin[newsplugin].scale,%3);

    set(plugin[newsplugin].zorder,%4);

    set(plugin[newsplugin].align,%5);

    set(plugin[newsplugin].edge,%5);



  </action>



  <action name="addmap">

    txtadd(tooltipname, 'map_', %1);

    addplugin(get(tooltipname));

    set(plugin[get(tooltipname)].url,%FIRSTXML%/%2);

    set(plugin[get(tooltipname)].x,0);

    set(plugin[get(tooltipname)].y,0);

    set(plugin[get(tooltipname)].visible,true);

    set(plugin[get(tooltipname)].alpha,1);

    set(plugin[get(tooltipname)].scale,1);

    set(plugin[get(tooltipname)].zorder,2);

    set(plugin[get(tooltipname)].align,center);

    set(plugin[get(tooltipname)].edge,center);

    addpoint(get(tooltipname));

  </action>

  <action name="addpoint">

    addplugin(newspoint);

    txtadd(plugin[newspoint].parent, 'plugin[', %1, ']');

    set(plugin[newspoint].url,%FIRSTXML%/skin/panomap/newpoint.png);

    set(plugin[newspoint].x,5);

    set(plugin[newspoint].y,5);

    set(plugin[newspoint].visible,true);

    set(plugin[newspoint].onhover,onhover_drag(););

    set(plugin[newspoint].ondown,ondown_drag(););

    set(plugin[newspoint].onup,onup_drag(););

    set(plugin[newspoint].alpha,1);

    set(plugin[newspoint].scale,1);

    set(plugin[newspoint].zorder,10000);

    set(plugin[newspoint].align,center);

    set(plugin[newspoint].edge,center);

    addplugin(closepoint);

    set(plugin[closepoint].url,%FIRSTXML%/skin/panomap/close.png);

    set(plugin[closepoint].x,-15);

    set(plugin[closepoint].y,-5);

    set(plugin[closepoint].visible,true);

    set(plugin[closepoint].zorder,10000);

    set(plugin[closepoint].align,lefttop);

    set(plugin[closepoint].edge,lefttop);

    set(plugin[closepoint].enabled,true);

    addplugin(okpoint);

    set(plugin[okpoint].url,%FIRSTXML%/skin/panomap/ok.png);

    set(plugin[okpoint].x,-15);

    set(plugin[okpoint].y,35);

    set(plugin[okpoint].visible,true);

    set(plugin[okpoint].zorder,10000);

    set(plugin[okpoint].align,lefttop);

    set(plugin[okpoint].edge,lefttop);

    set(plugin[okpoint].onclick,js(addpoint));

  </action>

  <action name="loadpano" >

    loadpano(%FIRSTXML%/%1, time=random,  MERGE, ZOOMBLEND(1.5,10));

  </action>

  <action name="loadblend" >

    if(skin.showtype==0,

    loadpano(%FIRSTXML%/%1, time=random,MERGE,%2);,jscall("layer.msg('请点击下方场景名称进行切换');"););

  </action>

  <action name="updatehospot" >

tween(hotspot[newspot].ath,get('view.hlookat'));

tween(hotspot[newspot].atv,get('view.vlookat'));

set(update,hotspot[newspot]);

	</action>

  <action name="loadxml" >

    	set(plugin[%1].x,%3);

    	set(plugin[%1].y,%4);

    	set(plugin[radar].x,%3);

    	set(plugin[radar].y,%4);

	    loadpano(%2,null,KEEPALL,BLEND(2));

	    set(plugin[radar].heading,10);

    </action>

  <action name="update_map_spot" >

		plugin[map].activatespot(%1);

		plugin[map].pantospot(%1);

	</action>

  <action name="load_korfustadt_altefestung" >

		update_map_spot(%2);

		loadpano(%1, null, MERGE, BLEND(1));

	</action>

  <action name="load_korfustadt_altefestung_oben" >

		update_map_spot(%2);

		loadpano(%1, null, MERGE, BLEND(1));

	</action>

 

  <action name="activatespot">

		set(plugin[map_%1].visible,true);

                 set(plugin[map_%1].keep,true);

               	set(plugin[activespot].parent, spot_%2);

		set(plugin[activespot].visible, true);

                set(plugin[radar].parent, map_%1);

		copy(plugin[radar].x, plugin[spot_%2].x);

		copy(plugin[radar].y, plugin[spot_%2].y);

		set(plugin[radar].visible, true);

		set(plugin[radar].heading, %3);

set_attrs(plugin,keep,true,parent,map_%1,keep,false,type,pluginmap);



	</action>



<action name="actionmap">

set(plugin[activespot].parent, spot_%1);

		set(plugin[activespot].visible, true);

              

		copy(plugin[radar].x, plugin[spot_%1].x);

		copy(plugin[radar].y, plugin[spot_%1].y);

		set(plugin[radar].visible, true);

		set(plugin[radar].heading, %2);

</action>

<action name="start">

  action(setthumbs,get(config.scene_num),get(config.type_id));



  action(type_uptime,get(config.type_id));

  action(typetumb_x,get(config.type_id));

  delayedcall(0.4,if(config.scene_map==true,set_attr(plugin,visible,false,m_type,panomap);set(plugin[activespot].visible,true);set(plugin[radar].visible,true);activatespot(get(config.type_id),get(config.scene_num),get(config.heading));,set(plugin[activespot].visible,false);set(plugin[radar].visible,false);));

  if(skin.is_normalview==true,normalview(5););

  if(skin.is_timeshow==null,set(layer[type_time].visible,false);,if(skin.is_timeshow==false,set(layer[renqi].y,-40); set(layer[type_time].visible,false);););

  if(skin.is_fbdw==null,set(layer[shop_title].visible,true);,if(skin.is_fbdw==false,set(layer[shop_title].visible,false);,set(layer[shop_title].visible,true);););

  if(skin.id==1009,set(layer[skin_title].html,get(config.scene_name)););

  if(skin.id==1010,set(layer[skin_title].html,get(config.scene_name)););

  if(skin.id==1011,set(layer[skin_title].html,get(config.scene_name)););

  if(skin.id==1012,set(layer[skin_title].html,get(config.scene_name)); thumbborder(get(config.scene_num)););

  if(skin.id==1013,set(layer[skin_title].html,get(config.scene_name)); thumbborder(get(config.scene_num)););

  if(skin.id==1014,set(layer[skin_title].html,get(config.scene_name)); thumbborder(get(config.scene_num)););

  if(skin.id==1021,set(layer[skin_title].html,get(config.scene_name)); thumbborder(get(config.scene_num)););

  if(skin.id==1022,set(layer[skin_title].html,get(config.scene_name)); thumbborder(get(config.scene_num)););

  if(skin.id==1023,set(layer[skin_title].html,get(config.scene_name)); thumbborder(get(config.scene_num)););

  if(skin.id==1024,set(layer[skin_title].html,get(config.scene_name));set(plugin[thumbborder].visible,false);  );

  if(skin.speeh==null,,if(skin.speeh==false,js(removeaudio());));

</action>

  <action name="type_uptime">

    if(config.pstime=== null,set(layer[renqi].y,-40); set(layer[type_time].visible,false);,set(layer[type_time].visible,true);set(layer[renqi].y,-57);txtadd(uptime, '日期:',get(config.pstime)); set(layer[type_time].html,get(uptime)););





  </action>

  <action name="thumbborder">

    sub(tx,get(plugin[%1].x),3);

    set(plugin[thumbborder].x,get(tx));

    set(plugin[thumbborder].y,get(plugin[%1].y));

    set(plugin[thumbborder].parent,get(plugin[%1].parent));

  </action>

  <action name="draghotspot">

  if(dragging, 

	screentosphere(mouse.x,mouse.y,ath,atv);

	delayedcall(0,draghotspot());

	);

</action>

<action name="draghotspots">

		spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery, 'l');

		sub(drag_adjustx, mouse.stagex, hotspotcenterx);

		sub(drag_adjusty, mouse.stagey, hotspotcentery);

		asyncloop(pressed,

			sub(dx, mouse.stagex, drag_adjustx);

			sub(dy, mouse.stagey, drag_adjusty);

			screentosphere(dx, dy, ath, atv);			

		  );

	</action>

  <action name="onhover_drag">

	if (drag==true,

		sub(dx,mouse.x);sub(dy,mouse.y);

		

		if (align==right,mul(dx,-1),);

		if (align==righttop,mul(dx,-1),);

		if (align==rightbottom,mul(dx,-1),);

		

		if (align==bottom,mul(dy,-1),);

		if (align==leftbottom,mul(dy,-1),);

		if (align==rightbottom,mul(dy,-1),);

		

		sub(mx,x,dx);sub(my,y,dy);

		set(x,get(mx));set(y,get(my));

		copy(dx,mouse.x);copy(dy,mouse.y);delayedcall(0.1,onhover_drag();),

	)

    </action>

  <action name="ondown_drag">

	set(drag,true);

	copy(dx,mouse.x);copy(dy,mouse.y);

    </action>

  <action name="onup_drag">

		if (drag==true,

			sub(dx,mouse.x);sub(dy,mouse.y);

		

			if (align==right,mul(dx,-1),);

			if (align==righttop,mul(dx,-1),);

			if (align==rightbottom,mul(dx,-1),);

			

			if (align==bottom,mul(dy,-1),);

			if (align==leftbottom,mul(dy,-1),);

			if (align==rightbottom,mul(dy,-1),);

			

			sub(mx,x,dx);sub(my,y,dy);

			tween(x,get(mx),0.1);tween(y,get(my),0.1);

			set(drag,false);

			

			,

		)

    </action>

<action name="set_attr">

		sub(i,%1.count,1);

		if(i GE 0,set_loop_all_attr(get(i),%1,%2,%3,%4,%5));

	</action>



	<action name="set_loop_all_attr">

		if(%5 == null,

			set(%2[%1].%3,%4);

			,

			if(%2[%1].%5 == %6,

				set(%2[%1].%3,%4);

				);

			);

		dec(i);

		if(i GE 0, set_loop_all_attr(get(i),%2,%3,%4,%5,%6) );

	</action> 

		<action name="set_attrs">

		sub(i,%1.count,1);

		if(i GE 0,set_loop_all_attrs(get(i),%1,%2,%3,%4,%5,%6,%7,%8,%9));

	</action>



	<action name="set_loop_all_attrs">

		if(%5 == null,

			set(%2[%1].%3,%4);

			,

			if(%2[%1].%5 == %6,

				set(%2[%1].%3,%4),if(%2[%1].%9==%10,set(%2[%1].%7,%8));

				);

			);

		dec(i);

		if(i GE 0, set_loop_all_attrs(get(i),%2,%3,%4,%5,%6) );

	</action>

<action name="typetumb_x">

  set_attr(plugin,visible,false,t_visible,type); set_attr(plugin,backgroundcolor,0x999999,t_visible,typename);set(plugin[t_bg_%1].visible,true);set(plugin[t_bg_%1].mask,);set(plugin[type_%1].backgroundcolor,get(plugin[type_%1].activecolor));

</action>

  <action name="typetumb">

action(loadpano,get(first_url));

</action>

  <action name="set_type">

sub(i,%1.count,1);if(i GE 0,set_loop_all_type(get(i),%2));	

</action>

  <action name="set_loop_all_type">

    if(plugin[%1].type == active,if(plugin[%1].name != %2,set(plugin[%1].backgroundcolor,0x999999););set(plugin[%1].type,typeimg););

    dec(i);if(i GE 0, set_loop_all_type(get(i),%2) );

  </action>

  <action name="setthumbs">

    set_attr(plugin,effect,,parent,t_bg_%2);

    set(plugin[%1].effect,glow(0xFFFFFF,1,2,250));

    plugin[t_box].setcenter(get(plugin[%1].x),get(plugin[%1].y));

  </action>

 <action name="rotate360">

   set(autorotate.enabled,true);set(autorotate.speed,%1);

   playsound(asound, %SWFPATH%/plugins/bgsound.mp3, 1, skin_nextscene_loops(+1););

   set(events.onxmlcomplete,start();rotate360(%1););

 </action>

 <action name="showpic" >

   addplugin(picmode);set(plugin[picmode].url,%1);set(plugin[picmode].scale,%2);set(plugin[picmode].enable,true);set(plugin[picmode].visible,true);set(plugin[picmode].align,center);set(plugin[picmode].zorder,1000000);

   set(plugin[picmode].onloaded,set(alpha,0); tween(alpha,1.0);set(parent,layer[scrollarea]);set(layer[sidebar].visible,true););

   set(plugin[picmode].onclick,action(hidepic,picmode));



 </action>

  <action name="hidepic" >

    set(layer[sidebar].visible,false);

    if(plugin[%1].enabled,set(plugin[%1].enabled,false);

    tween(plugin[%1].alpha,0.0);

    removeplugin(%1);removeplugin(plugin_close);removeplugin(plugin_frame); );

  </action>



<action name='showinfo'>

	

txtadd(cc,'<p>', %1,'</p>');

txtadd(nn,'<p>',%2,'</p>');

  set(plugin[bg_right_bar2_title].html,get(cc));

 set(plugin[bg_right_bar2_description].html, get(nn));

	    set(plugin[bg_right_bar2_description].y, 50);

set(plugin[bg_right_bar2].visible,true);

tween(plugin[bg_right_bar2].alpha,1);

	   </action>

<action name="scene_info">

set(pic,get(config.scene_infopic));

showpic(get(pic),1);

set(showtime,get(config.showpictime));

delayedcall(get(showtime), hidepic(picmode));

</action>

<action name="flyout">

		copy(backup_rx,rx);

		copy(backup_ry,ry);

		copy(backup_rz,rz);

		copy(backup_scale,scale);

		tween(rx, 0);

		tween(ry, 0);

		tween(rz, 0);

		tween(scale, 1.5);

		tween(flying, 1.0);

</action>

<action name="flyback">	

	tween(rx, get(backup_rx));

		tween(ry, get(backup_ry));

		tween(rz, get(backup_rz));

		tween(scale, get(backup_scale));

		tween(flying, 0.0);

</action>



<action name="addplayvideo">

addplugin(plugin_frame);

set(plugin[plugin_frame].url,%SWFPATH%/skin/info/bg_tab_panel.png);



set(plugin[plugin_frame].keep,true);



set(plugin[plugin_frame].width,%2);

set(plugin[plugin_frame].height,%3);

set(plugin[plugin_frame].align,center);

set(plugin[plugin_frame].x,0);

set(plugin[plugin_frame].y,0);

set(plugin[plugin_frame].alpha,1);

set(plugin[plugin_frame].visible,true);

set(plugin[plugin_frame].zorder,17);

addplugin(pluginvideo);

set(plugin[pluginvideo].url,%SWFPATH%/plugins/videoplayer.swf);

set(plugin[pluginvideo].alturl,%SWFPATH%/plugins/videoplayer.js);

set(plugin[plugin_close].parent,plugin_frame);

set(plugin[pluginvideo].videourl,%1);

set(plugin[pluginvideo].width,%2);

set(plugin[pluginvideo].height,%3);

set(plugin[pluginvideo].altvideourl,%4);

set(plugin[pluginvideo].align,center);

set(plugin[pluginvideo].x,0);

set(plugin[pluginvideo].y,0);

set(plugin[pluginvideo].pausedonstart,false);

set(plugin[pluginvideo].loop,false);

set(plugin[pluginvideo].volume,1);

set(plugin[pluginvideo].keetp,true);

set(plugin[pluginvideo].buffertime,0.1);

set(plugin[pluginvideo].updateeveryframe,true);

set(plugin[pluginvideo].scalechildren,false);

set(plugin[pluginvideo].onvideocomplete,%5);

set(plugin[pluginvideo].visible,true);

set(plugin[pluginvideo].zorder,18);

set(plugin[pluginvideo].onclick,togglepause());

addplugin(plugin_close);

set(plugin[plugin_close].url,%SWFPATH%/skin/info/close.gif);

set(plugin[plugin_close].parent,plugin_frame);

set(plugin[plugin_close].keep,true);

set(plugin[plugin_close].keep,true);

set(plugin[plugin_close].width,46);

set(plugin[plugin_close].height,14);

set(plugin[plugin_close].align,righttop);

set(plugin[plugin_close].edge,righttop);

set(plugin[plugin_close].x,-60);

set(plugin[plugin_close].y,0);

set(plugin[plugin_close].alpha,0.9);

set(plugin[plugin_close].visible,true);

set(plugin[plugin_close].zorder,19);

set(plugin[plugin_close].onclick,action(hidepic,pluginvideo));



</action>

<action name="normalview">

  set(skin.is_normalview,false);

  set(view.fisheye,0.8);set(view.fov,140);set(view.hlookat,-60);set(view.vlookat,87);set(view.fovmax,140);

  delayedcall(%1,

  tween(view.hlookat, get(config.hlookat),2.5, easeInOutQuad);

  tween(view.vlookat, get(config.vlookat),2.5, easeInOutQuad);

  tween(view.fov, 110,  2.5, easeInOutQuad);

  set(view.fovmax,140);

  tween(view.fisheye, 0.0, 2.5, easeInOutQuad););



</action>



	<style name="hotspot_ani_white"

	       url="%SWFPATH%/plugins/hotspot_ani_white_64x64x20.png"

	       crop="0|0|64|64"

	       framewidth="64" frameheight="64" frame="0" lastframe="19"

	       onloaded="hotspot_animate();"

	       />



	<action name="hotspot_animate">

		inc(frame,1,get(lastframe),0);

		mul(ypos,frame,frameheight);

		txtadd(crop,'0|',get(ypos),'|',get(framewidth),'|',get(frameheight));

		delayedcall(0.03, if(loaded, hotspot_animate() ) );

	</action>

<action name="defaultsnow">

                set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          snow);

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        4000);

		set(plugin[snow].color,         0xFFFFFF);

		set(plugin[snow].speed,         1.0);

		set(plugin[snow].shake,         4.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     4.0);

		set(plugin[snow].wind,          0.0);

	</action>

	

	<action name="snowballs">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          image);

		set(plugin[snow].imageurl,      '%SWFPATH%/plugins/snow/snowball.png');

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        2000);

		set(plugin[snow].imagescale,    0.5);

		set(plugin[snow].speed,         1.0);

		set(plugin[snow].shake,         4.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     2.0);

		set(plugin[snow].wind,          0.0);

	</action>

	

	<action name="snowflakes">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          image);

		set(plugin[snow].imageurl,      '%SWFPATH%/plugins/snow/snowflake.png');

		set(plugin[snow].blendmode,     add);

		set(plugin[snow].flakes,        2000);

		set(plugin[snow].imagescale,    0.4);

		set(plugin[snow].speed,         0.5);

		set(plugin[snow].shake,         8.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     2.0);

		set(plugin[snow].wind,          0.0);

	</action>

	

	<action name="silverstars">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          image);

		set(plugin[snow].imageurl,      '%SWFPATH%/plugins/snow/silverstar.png');

		set(plugin[snow].blendmode,     add);

		set(plugin[snow].flakes,        2000);

		set(plugin[snow].imagescale,    0.3);

		set(plugin[snow].speed,         1.0);

		set(plugin[snow].shake,         4.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     2.0);

		set(plugin[snow].wind,          0.0);

	</action>

	

	<action name="goldenstars">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          image);

		set(plugin[snow].imageurl,      '%SWFPATH%/plugins/snow/star.png');

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        1000);

		set(plugin[snow].imagescale,    1.0);

		set(plugin[snow].speed,         1.0);

		set(plugin[snow].shake,         4.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     1.9);

		set(plugin[snow].wind,          0.0);

	</action>

	

	<action name="hearts">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          image);

		set(plugin[snow].imageurl,      '%SWFPATH%/plugins/snow/heart.png');

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        250);

		set(plugin[snow].imagescale,    0.5);

		set(plugin[snow].speed,         1.0);

		set(plugin[snow].shake,         4.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     1.5);

		set(plugin[snow].wind,          0.0);

	</action>

	

	<action name="smileys">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          image);

		set(plugin[snow].imageurl,      '%SWFPATH%/plugins/snow/smiley.png');

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        1000);

		set(plugin[snow].imagescale,    1.0);

		set(plugin[snow].speed,         1.0);

		set(plugin[snow].shake,         4.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     1.5);

		set(plugin[snow].wind,          0.0);

	</action>

	

	

	<action name="rain">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          rain);

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        2000);

		set(plugin[snow].color,         0x7FAFFF);

		set(plugin[snow].speed,         3.5);

		set(plugin[snow].shake,         1.0);

		set(plugin[snow].speedvariance, 1.0);

		set(plugin[snow].spreading,     3.0);

		set(plugin[snow].rainwidth,     1.0);

		set(plugin[snow].rainalpha,     0.5);

		set(plugin[snow].wind,          2.0);

	</action>	

	

	<action name="heavyrain">

    set(plugin[snow].floor,         0.7);

		set(plugin[snow].mode,          rain);

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        4000);

		set(plugin[snow].color,         0x9FAFFF);

		set(plugin[snow].speed,         4.1);

		set(plugin[snow].shake,         0.0);

		set(plugin[snow].speedvariance, 1.5);

		set(plugin[snow].spreading,     4.0);

		set(plugin[snow].rainwidth,     1.5);

		set(plugin[snow].rainalpha,     0.3);

		set(plugin[snow].wind,          3.0);

	</action>

<action name="flower">

    set(plugin[snow].floor, 0.7);

			set(plugin[snow].mode,   image);

		set(plugin[snow].imageurl,      '%SWFPATH%/plugins/snow/flower.png');

		set(plugin[snow].blendmode,     normal);

		set(plugin[snow].flakes,        100);

		set(plugin[snow].imagescale,    0.8);

		set(plugin[snow].speed,         1.0);

		set(plugin[snow].shake,         4.0);

		set(plugin[snow].speedvariance, 2.0);

		set(plugin[snow].spreading,     1.9);

		set(plugin[snow].wind,          0.0);

	</action>



<include url="%SWFPATH%/plugins/webvr.xml" />





	<action name="skin_onresize">

		mul(mh, stageheight, -1);

		if(plugin[skin_thumbs].state == 'opened', add(mh,plugin[skin_thumbs].height); );

		

		set(plugin[skin_scroll_plugin].y, get(mh));

		ifnot(device.mobile, if(stagewidth LT 480, skin_showbuttons(false), skin_showbuttons(true)); );



	</action>

	<action name="draglayer">

		copy(drag_currentx, x);

		copy(drag_currenty, y);

		copy(drag_stagex, mouse.stagex);

		copy(drag_stagey, mouse.stagey);

		indexoftxt(align_contains_right, get(align), 'right');

		indexoftxt(align_contains_bottom, get(align), 'bottom');

		calc(drag_align_x, align_contains_right GE 0 ? -1 : +1);

		calc(drag_align_y, align_contains_bottom GE 0 ? -1 : +1);

		asyncloop(pressed,

			calc(x, drag_currentx + (mouse.stagex - drag_stagex)*drag_align_x);

			calc(y, drag_currenty + (mouse.stagey - drag_stagey)*drag_align_y);

		  );

	</action>



	<action name="draglayer_vertically_within_parent">

		copy(drag_currenty, y);

		copy(drag_stagey, mouse.stagey);

		calc(y_min, layer[get(parent)].pixelheight - pixelheight);

		if(y_min LT 0,

			asyncloop(pressed,

				calc(y, drag_currenty + (mouse.stagey - drag_stagey));

				clamp(y, get(y_min), 0);

			  );

		  );

	</action>



<action name="showdialog">

set(layer[textbox].width,%1);

set(layer[textbox].height,%2);

set(layer[fullscreen].ondown,set(layer[textbox].x,0);set(layer[textbox].y,0);switch(layer[textbox].width,100%,%1);switch(layer[textbox].height,100%,%2);switch(layer[fullscreen].url,%SWFPATH%/plugins/btn_fullscreen_exit.png,%SWFPATH%/plugins/btn_fullscreen.png););

set(layer[title].html,%3);

set(layer[infocontent].html,%4);

set(layer[textbox].visible,true);

</action>

  <action name="add_tooltips">

    if(skin.vrshow=="zssys",

    if(%1==null,

    txtadd(tooltipname, 'tooltip_', get(name));

    txtadd(tooltipnames, '', get(name));

    addplugin(get(tooltipname));

    txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');

    set(plugin[get(tooltipname)].url,%SWFPATH%/plugins/textfield.swf);

    set(plugin[get(tooltipname)].align,bottom);

    set(plugin[get(tooltipname)].edge,top);

    set(plugin[get(tooltipname)].x,0);

    set(plugin[get(tooltipname)].y,0);

    set(plugin[get(tooltipname)].minwidth,50);

    set(plugin[get(tooltipname)].autoheight,true);

    set(plugin[get(tooltipname)].background,true);

    set(plugin[get(tooltipname)].backgroundcolor,0x000000);

    set(plugin[get(tooltipname)].roundedge,5);

    set(plugin[get(tooltipname)].backgroundalpha,0.5);

    set(plugin[get(tooltipname)].border,false);

    set(plugin[get(tooltipname)].glow,4);

    set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);

    set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-size:13px;padding:1px 3px;');

    set(plugin[get(tooltipname)].textshadow,1);

    set(plugin[get(tooltipname)].textshadowrange,6.0);

    set(plugin[get(tooltipname)].textshadowangle,80);

    set(plugin[get(tooltipname)].html,get(nametext));

    set(plugin[get(tooltipname)].enabled,true);



    );

    if(skin.delhot=="show",

    txtadd(tooltipnames, 'del_', get(name));

    addplugin(get(tooltipnames));

    txtadd(plugin[get(tooltipnames)].parent, 'hotspot[', get(name), ']');

    set(plugin[get(tooltipnames)].url,%SWFPATH%/plugins/closebutton.png);

    set(plugin[get(tooltipnames)].align,righttop);set(plugin[get(tooltipnames)].edge,top);

    set(plugin[get(tooltipnames)].x,0);set(plugin[get(tooltipnames)].y,-15);set(plugin[get(tooltipnames)].number,get(name));

    set(plugin[get(tooltipnames)].autowidth,true);set(plugin[get(tooltipnames)].autoheight,true););

    set(plugin[get(tooltipnames)].onclick,removehotspot(get(number));removeplugin(get(name));js(delhostspot(get(number))););

    );

  </action>

  <action name="add_tooltip">

    if(skin.vrshow=="zssys",

    txtadd(tooltipname, 'tooltip_', get(name));

    txtadd(tooltipnames, '', get(name));

    addplugin(get(tooltipname));

    txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');

    set(plugin[get(tooltipname)].url,%SWFPATH%/plugins/textfield.swf);

    set(plugin[get(tooltipname)].align,bottom);

    set(plugin[get(tooltipname)].edge,top);

    set(plugin[get(tooltipname)].x,0);

    set(plugin[get(tooltipname)].y,0);

    set(plugin[get(tooltipname)].minwidth,50);

    set(plugin[get(tooltipname)].autoheight,true);

    set(plugin[get(tooltipname)].background,true);

    set(plugin[get(tooltipname)].backgroundcolor,0x000000);

    set(plugin[get(tooltipname)].roundedge,5);

    set(plugin[get(tooltipname)].backgroundalpha,0.4);

    set(plugin[get(tooltipname)].border,false);

    set(plugin[get(tooltipname)].glow,4);

    set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);

    set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-size:13px;padding:1px 3px;');

    set(plugin[get(tooltipname)].textshadow,1);

    set(plugin[get(tooltipname)].textshadowrange,6.0);

    set(plugin[get(tooltipname)].textshadowangle,80);

    set(plugin[get(tooltipname)].html,get(nametext));

    set(plugin[get(tooltipname)].enabled,true);

    txtadd(plugin[get(tooltipname)].onclick, 'hotspot[', get(name), '].onclick');



    if(skin.delhot=="show",

    txtadd(tooltipnames, 'del_', get(name));

    addplugin(get(tooltipnames));

    txtadd(plugin[get(tooltipnames)].parent, 'hotspot[', get(name), ']');

    set(plugin[get(tooltipnames)].url,%SWFPATH%/plugins/closebutton.png);

    set(plugin[get(tooltipnames)].align,righttop);set(plugin[get(tooltipnames)].edge,top);

    set(plugin[get(tooltipnames)].x,0);set(plugin[get(tooltipnames)].y,-15);set(plugin[get(tooltipnames)].number,get(name));

    set(plugin[get(tooltipnames)].autowidth,true);set(plugin[get(tooltipnames)].autoheight,true););

    set(plugin[get(tooltipnames)].onclick,removehotspot(get(number));removeplugin(get(name));js(delhostspot(get(number))););

    );

  </action>



  <action name="do_crop_animation">

                                          

   

    registerattribute(xframes, calc((imagewidth / %1) BOR 0));

    registerattribute(yframes, calc((imageheight / %2) BOR 0));

    registerattribute(frames, calc(xframes * yframes));

    registerattribute(frame, 0);



    set(crop, '0|0|%1|%2');



    setinterval(calc('crop_anim_' + name), calc(1.0 / %3),

    if(loaded,

    inc(frame);

    if(frame GE frames, if(onlastframe !== null, onlastframe() ); set(frame,0); );

    mod(xpos, frame, xframes);

    div(ypos, frame, xframes);

    Math.floor(ypos);

    mul(xpos, %1);

    mul(ypos, %2);

    calc(crop, xpos + '|' + ypos + '|%1|%2');

    ,

    clearinterval(calc('crop_anim_' + name));

    );

    );

  </action>



  <action name="mapshow">

   

    txtadd(tooltipname, 'map_',get(config.type_id));

    set(plugin[get(tooltipname)].visible,true);

    switch(plugin[get(tooltipname)].scale,1,0);

  </action>



  <action name="uppluginwidth">

    set(w,get(plugin[%1].width));if(w GT stagewidth,mul(nw,0.85,stagewidth);div(nwb,get(nw),get(plugin[%1].width));mul(nh,get(nwb),get(plugin[%1].height));set(plugin[%1].width,get(nw));set(plugin[%1].height,get(nh)););

  </action>



  <action name="skin_nextscene_loops">

    add(newsceneindex, scenes[get(config.scene_num)].index, %1);

    sub(lastsceneindex, scenes.count,1);

    if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));

    if(newsceneindex GT lastsceneindex, set(newsceneindex,0));

    skin_loadscenes(get(newsceneindex), SLIDEBLEND(0.5,0,0.75, linear));

  </action>

  <action name="skin_loadscenes">

    txtadd(sxml,'%FIRSTXML%/',get(scenes[%1].scene_xml));

    loadpano(get(sxml), null, MERGE, %2);

  </action>

  <action name="addnewline">

    addhotspot(newline);

    set(hotspot[newline].ondown,dragline(newline););

    set(hotspot[newline].onloaded,addlinepoint(newline););

    set(hotspot[newline].keep,false);

    set(hotspot[newline].autoalpha,false);

    set(hotspot[newline].fillcolor,0xAAAAAA);

    set(hotspot[newline].fillalpha,0.5);

    set(hotspot[newline].borderwidth,2.0);

    set(hotspot[newline].bordercolor,0xffffff);

    set(hotspot[newline].borderalpha,1.0);

    set(hotspot[newline].polyline,true);

    set(hotspot[newline].zorder,9);

    set(hotspot[newline].istext,1);

    set(ath1,get('view.hlookat'));

    set(atv1,get('view.vlookat'));

    set(hotspot[newline].point[n0].ath,get(ath1));

    set(hotspot[newline].point[n0].atv,get(atv1));

    if(ath1 LT 0,add(ath1,360));

    add(ath2,get(ath1),30);

    set(atv2,get(atv1));

    set(hotspot[newline].point[n1].ath,get(ath2));

    set(hotspot[newline].point[n1].atv,get(atv2));

  </action>

  <action name="addlinepoint">

    txtadd(p0,%1,'p0');

    txtadd(p1,%1,'p1');

    txtadd(ltitle,%1,'_title');

    hotspot[%1].getcenter(ath_center,atv_center);

    addhotspot(get(p0));

    set(hotspot[get(p0)].ath,get(hotspot[%1].point[n0].ath));

    set(hotspot[get(p0)].atv,get(hotspot[%1].point[n0].atv));

    if(%2==null,

    set(hotspot[get(p0)].ondown,draghotspotsx(0,%1));

    set(hotspot[get(p0)].url,%FIRSTXML%/src/a6.png);

    set(hotspot[get(p0)].oy,-5);

    set(hotspot[get(p0)].onloaded,do_crop_animation(128,128, 20););

    set(hotspot[get(p0)].img_width,128);

    set(hotspot[get(p0)].scale,0.4);

    ,

    set(hotspot[get(p0)].url,%SWFPATH%/src/point.png);

    set(hotspot[get(p0)].renderer,css3d);

    set(hotspot[get(p0)].scale,0.8);

    );

    set(hotspot[get(p0)].keep,false);

    set(hotspot[get(p0)].capture,true);

    set(hotspot[get(p0)].distorted,false);

    set(hotspot[get(p0)].zorder,10);

    set(hotspot[get(p0)].flying,0);

    set(hotspot[get(p0)].devices,all);

    addhotspot(get(p1));

    set(hotspot[get(p1)].ath,get(hotspot[%1].point[n1].ath));

    set(hotspot[get(p1)].atv,get(hotspot[%1].point[n1].atv));

    if(%2==null,

    set(hotspot[get(p1)].ondown,draghotspotsx(1,%1));

    set(hotspot[get(p1)].url,%FIRSTXML%/src/a6.png);

    set(hotspot[get(p1)].oy,-5);

    set(hotspot[get(p1)].onloaded,do_crop_animation(128,128, 20););

    set(hotspot[get(p1)].img_width,128);

    set(hotspot[get(p1)].scale,0.4);

    ,

    set(hotspot[get(p1)].url,%SWFPATH%/src/point.png);

    set(hotspot[get(p1)].renderer,css3d);

    set(hotspot[get(p1)].scale,0.8);

    );

    set(hotspot[get(p1)].keep,false);

    set(hotspot[get(p1)].capture,true);

    set(hotspot[get(p1)].distorted,false);

    set(hotspot[get(p1)].zorder,10);

    set(hotspot[get(p1)].flying,0);

    set(hotspot[get(p1)].devices,all);

    addhotspot(get(ltitle));

    set(hotspot[get(ltitle)].ath,get(ath_center));

    set(hotspot[get(ltitle)].atv,get(atv_center));

    if(%2==null,

    set(hotspot[get(ltitle)].nametext,编辑尺寸);

    set(hotspot[get(ltitle)].onclick,js(editline););

    ,

    set(hotspot[get(ltitle)].nametext,%2);

    );

    set(hotspot[get(ltitle)].url,%SWFPATH%/src/kong.png);

    set(hotspot[get(ltitle)].keep,false);

    set(hotspot[get(ltitle)].capture,true);

    set(hotspot[get(ltitle)].distorted,false);

    set(hotspot[get(ltitle)].zorder,10);

    set(hotspot[get(ltitle)].flying,0);

    set(hotspot[get(ltitle)].devices,all);

    set(hotspot[get(ltitle)].istext,1);

    set(hotspot[get(ltitle)].onloaded,add_tooltip(););

  </action>

  <action name="draghotspotsx">

    spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery, 'l');

    sub(drag_adjustx, mouse.stagex, hotspotcenterx);

    sub(drag_adjusty, mouse.stagey, hotspotcentery);

    asyncloop(pressed,

    sub(dx, mouse.stagex, drag_adjustx);

    sub(dy, mouse.stagey, drag_adjusty);

    screentosphere(dx, dy, ath, atv);

    set(hotspot[%2].borderwidth,2);

    set(hotspot[%2].point[n%1].ath,get(ath));

    set(hotspot[%2].point[n%1].atv,get(atv));

    txtadd(newtitle,%2,'_title');

    upline_tile(%2,get(newtitle));

    );

  </action>

  <action name="dragline">

    spheretoscreen(hotspot[%1].point[n0].ath, hotspot[%1].point[n0].atv, x1, y1, 'l');

    spheretoscreen(hotspot[%1].point[n1].ath, hotspot[%1].point[n1].atv, x2, y2, 'l');

    sub(drag_adjustx, mouse.stagex,0);

    sub(drag_adjusty, mouse.stagey,0);

    asyncloop(pressed,

    sub(dx,drag_adjustx,mouse.stagex);

    sub(dy,drag_adjusty,mouse.stagey);

    set(hotspot[%1].borderwidth,2);

    sub(dx1,x1,dx);

    sub(dy1,y1,dy);

    sub(dx2,x2,dx);

    sub(dy2,y2,dy);

    screentosphere(dx1, dy1, ath1, atv1);

    screentosphere(dx2, dy2, ath2, atv2);

    set(hotspot[%1].point[n0].ath,get(ath1));

    set(hotspot[%1].point[n0].atv,get(atv1));

    set(hotspot[%1].point[n1].ath,get(ath2));

    set(hotspot[%1].point[n1].atv,get(atv2));

    set(hotspot[%1p0].ath,get(ath1));

    set(hotspot[%1p0].atv,get(atv1));

    set(hotspot[%1p1].ath,get(ath2));

    set(hotspot[%1p1].atv,get(atv2));

    txtadd(newtitle,%1,'_title');

    upline_tile(%1,get(newtitle));

    );

  </action>

  <action name="upline_tile">

    hotspot[%1].getcenter(ath_center,atv_center);

    set(hotspot[%2].ath,get(ath_center));

    set(hotspot[%2].atv,get(atv_center));

  </action>

 </krpano>
